before_script:
  - sudo mkdir -p ~/.ssh
  - echo "$THE_WAY" | base64 --decode | sudo tee ~/.ssh/the_way > /dev/null
  - sudo chmod 600 ~/.ssh/the_way

stages:
 - destroy_job
 - up_only_job
 - skip_up_job
 - validate_cluster

destroy_job:
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: destroy_job
  tags:
    - linux
  script:
    - sudo ssh -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T $TEST_TARGET 'cd Documents/src/test && vagrant destroy -f'

up_only_job:
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: up_only_job
  tags:
    - linux
  timeout: 3h
  script:
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T Vagrant_Kubernetes_Setup.sh $TEST_TARGET:Documents/src/test/Vagrant_Kubernetes_Setup.sh
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T config.json $TEST_TARGET:Documents/src/test/config.json
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T Vagrantfile.template $TEST_TARGET:Documents/src/test/Vagrantfile.template
    - sudo ssh -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T $TEST_TARGET 'export ALERT_WEBHOOK_URL=$ALERT_WEBHOOK_URL && export ALERT_AUTH_KEY=$ALERT_AUTH_KEY && cd Documents/src/test && ./Vagrant_Kubernetes_Setup.sh UP_ONLY'

skip_up_job:
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: skip_up_job
  tags:
    - linux
  timeout: 3h
  script:
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T hosts.template $TEST_TARGET:Documents/src/test/hosts.template
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T addons.yml $TEST_TARGET:Documents/src/test/addons.yml
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T build_inventory.template $TEST_TARGET:Documents/src/test/build_inventory.template
    - echo "sudo ssh -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T $TEST_TARGET \"export OPENAI_API_KEY=$OPENAI_API_KEY && cd Documents/src/test && ./Vagrant_Kubernetes_Setup.sh SKIP_UP\"" > /tmp/dynamics_action.sh
    - sh /tmp/dynamics_action.sh

validate_cluster:
  retry:
    max: 2
    when:
      - script_failure
      - api_failure
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: validate_cluster
  tags:
    - linux
  timeout: 1h
  script:
    # output config.json to log for ref
    - cat config.json
    # Copy validation script and config.json to the target machine
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T validate_cluster.rb config.json $TEST_TARGET:Documents/src/test/
    # Execute the validation script using ruby, reading node_name from config.json
    - |
      sudo ssh -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T $TEST_TARGET '
        cd Documents/src/test && 
        NODE_NAME=$(jq -r .node_name config.json)1 &&
        vagrant ssh -c "ruby /vagrant/validate_cluster.rb|tee /vagrant/validate_cluster.log" $NODE_NAME
      '
    # Copy validation log back from the target machine to runner
    - sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/the_way -T $TEST_TARGET:Documents/src/test/validate_cluster.log validate_cluster.log
    # Check log for fail
    - if grep "Kubernetes cluster validation passed successfully!" validate_cluster.log ; then echo "Kubernetes cluster validation passed successfully!"; else echo "Kubernetes cluster validation failed!"; exit 1; fi
  artifacts:
    paths:
      - validate_cluster.log
  dependencies:
    - up_only_job
